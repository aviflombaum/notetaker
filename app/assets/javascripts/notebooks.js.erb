  $(function(){


    function Note(name, content, referenceName, referenceLink){
      this.name = name;
      this.content = content;
      this.referenceName = referenceName;
      this.referenceLink = referenceLink;
  }
  // is this the right way to deal with the notes/references relationship? do I care?



  Note.prototype.format = function(){

      $('.newPanel').removeClass('hidden');
      $('.newNoteName').text(this.name);
      $('.newNoteContent').text(this.content);

    }
    // what is the best way to use erb? this.name should actually be a link to the note


    $('form.new_note').submit(function(event){
      event.preventDefault();
      var values = $(this).serialize();
      var posting = $.post('/notes', values);

      posting.done(function(data) {
        note = new Note (data["note"]["name"], data["note"]["content"], data["note"]["reference"]["name"], data["note"]["reference"]["reference_link"]);
        note.format();
        $("form").trigger("reset");
      });
    // });



// More button - notebooks/note
  // $(".js-more").on('click', function() {
  //   var id = $(this).data("id");
  //   $.get("/notes/" + id + "/content", function(data) {
  //     $("#content-" + id).html(data["content"])
  //   });
  //
  // });

// Index
  $('.show').click(function() {
     $('.notebook-details').toggle();
  });

  $('.noteName').click(function() {
     $('.noteContent').toggle();
  });

  $(".panel").hover(function(){
    $(this).addClass("panelHover")
  }, function(){
    $(this).removeClass("panelHover")

  });


});


// problems
  // not sure where the notebooks/26/notes is coming from
  //
